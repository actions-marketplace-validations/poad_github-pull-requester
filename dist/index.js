import './sourcemap-register.cjs';if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=new URL(".",import.meta.url).pathname.slice(import.meta.url.match(/^file:\/\/\/\w:/)?1:0,-1)+"/";var e={};var t=undefined&&undefined.__createBinding||(Object.create?function(e,t,n,r){if(r===undefined)r=n;var u=Object.getOwnPropertyDescriptor(t,n);if(!u||("get"in u?!t.__esModule:u.writable||u.configurable)){u={enumerable:true,get:function(){return t[n]}}}Object.defineProperty(e,r,u)}:function(e,t,n,r){if(r===undefined)r=n;e[r]=t[n]});var n=undefined&&undefined.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:true,value:t})}:function(e,t){e["default"]=t});var r=undefined&&undefined.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(e!=null)for(var u in e)if(u!=="default"&&Object.prototype.hasOwnProperty.call(e,u))t(r,e,u);n(r,e);return r};var u=undefined&&undefined.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:true});const i=r(require("@actions/core"));const o=u(require("./gitHubClient"));function run(){const errHandler=e=>{i.error(e.message);i.setFailed(e.message)};try{const e=i.getInput("github_token");const t=i.getInput("head_branch");const n=i.getInput("base_branch");const r=i.getInput("title");const u=i.getInput("body");const a=i.getInput("owner");const f=i.getInput("repository");i.info(`owner: ${a}`);i.info(`repo: ${f}`);i.info(`HEAD: ${t}`);i.info(`BASE: ${n}`);const c={owner:a,repo:f,title:r,body:u,head:t,base:n};const d=new o.default(e);d.createPullRequest(c).then((e=>{i.setOutput("result",e)})).catch(errHandler)}catch(e){if(e instanceof Error){errHandler(e)}else{i.error(JSON.stringify(e));i.setFailed(JSON.stringify(e))}}}run();
//# sourceMappingURL=index.js.map